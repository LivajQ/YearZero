void OnStart()
{
	StartScreenShake(0.005, 5, 1, 1);	
	PlayGuiSound("29_crumble.snt", 0.05f);
	GiveHint("ForceHint_04", "Hints", "ForceHint_04", 10);
		
	//USEITEM CALLBACKS
	
	AddUseItemCallback("", "2cm_rod", "2cm_area", "insert_2cm", true);	
	
	AddUseItemCallback("", "44cm_rod", "44cm_area", "insert_44cm", true);	
	
	AddUseItemCallback("", "5cm_rod", "5cm_area", "insert_5cm", true);	             // all these are for the machine puzzle
	
	AddUseItemCallback("", "8cm_rod", "8cm_area", "insert_8cm", true);	
	
	AddUseItemCallback("", "10cm_rod", "10cm_area", "insert_10cm", true);	
	
	AddUseItemCallback("", "11cm_rod", "11cm_area", "insert_11cm", true);
		
	AddUseItemCallback("", "glassjar", "usejar_area", "usejaronfuel", true);	//get the fuel from Underground Section
		
	AddUseItemCallback("", "cellskey", "cellsdoor", "unlockcellsdoor", true);	
	
	AddUseItemCallback("", "saw", "barricadearea", "breakbeams", true);	
	
	AddUseItemCallback("", "morguekey", "morguedoor", "unlockmorgue", true);	
	
	//COLLIDE CALLBACKS	
		
	AddEntityCollideCallback("Player", "FlashCollide", "FlashEvent", true, 1); //at the moment this does nothing
	
	AddEntityCollideCallback("Player", "KeyDropArea", "DropKeyEvent", true, 1); //drop the key in the pipe
	
	AddEntityCollideCallback("Player", "machine_area", "machine_examine", true, 1); //examine the machinery room
	
	AddEntityCollideCallback("Player", "ghoul_sewer_area", "ghoul_sewer", false, 1);
	
	//AddEntityCollideCallback("Player", "ambient_sound_area_1", "play_sound_1", true, 1); //ambient sounds
	
	//MISC
	
	PlayMusic("ug_ambience.ogg", true, 0.5, 5, 5, false); //music //the music file isn't found?
	
	SetEntityInteractionDisabled("fake*", true); //the rods at machine room
	
	SetEntityInteractionDisabled("fake_2", true); //the one that just wont deactivate
	
	SetEntityInteractionDisabled("fuel", true);
	
	//VARIABLE
	
	SetLocalVarInt("machine_leftside", 0);      //machine puzzle variables
	
	SetLocalVarInt("machine_rightside", 0);
	
	SetLocalVarInt("lever_variable", 0);        //rod machine levers
	
	SetLocalVarInt("glassjar_fuelarea", 0); //for checking whether the player has the container or not
}

void ghoul_sewer(string &in asParent, string &in asChild, int alState)
{
	
	if(HasItem("11cm_rod"))
    {
		SetEntityActive("ghoul_ug_1", true);
		AddEnemyPatrolNode("ghoul_ug_1", "PathNodeArea_1", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_1", "PathNodeArea_2", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_1", "PathNodeArea_3", 0.001f, "Idle");	
		AddEnemyPatrolNode("ghoul_ug_1", "PathNodeArea_2", 0.001f, "Idle");
		AddDebugMessage("ghoul activated!", false);
		CheckPoint("sewer_checkpoint", "FromSSewer", "sewerdeath_function", "Death_Hints", "sewer_hint");
    }
}

void hellbreaksloose(string &in asTimer)
{
	AddGlobalVarInt("fog_int_hub", 1);
	FadePlayerFOVMulTo(2, 1);
	PlaySoundAtEntity("","25_guardian_slime_appear.snt", "Player", 0.0f ,false);
	MovePlayerHeadPos(0.0f, -1.25f, 0.0f, 1.0f, 0.5f);
	SetPlayerRunSpeedMul(0.0f);
	SetPlayerMoveSpeedMul(0.0f);
	FadePlayerRollTo(-60, 10, 25);
	SetPlayerCrouchDisabled(true);
	SetFogColor(100, 0, 0, 0.5);
	SetPlayerActive(false);
	FadeOut(2);
	AddTimer("", 7.5f, "satanic_event_2");
	SetLanternActive(false, true);
	StartScreenShake(0.01, 11, 1, 1);	
	PlayGuiSound("29_crumble.snt", 0.45f);
	CheckPoint("ending_checkpoint", "machine_spawn", "machinedeath_function", "Death_Hints", "machine_hint");
}

void machinedeath_function(string &in asName, int alCount)
{
	if(alCount < 100){
		PlayMusic("ug_ambience.ogg", true, 0.5, 5, 1, false);
		SetEntityActive("ghoul_ug_2", true);
		SetEntityActive("ghoul_ug_3", true);
		
		AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_5", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_6", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_5", 0.001f, "Idle");
		
		AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_7", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_8", 0.001f, "Idle");
		AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_7", 0.001f, "Idle");
	}			
}

void satanic_event_2(string &in asTimer)
{
	SetPlayerActive(true);
	FadePlayerRollTo(0.0f, 1.0f, 33.0f);
	MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
	SetPlayerRunSpeedMul(1.0f);
	SetPlayerMoveSpeedMul(1.0f);
	SetPlayerCrouchDisabled(false);
	FadeIn(5);
	FadePlayerFOVMulTo(1, 1);
	SetEntityActive("ghoul_ug_2", true);
	SetEntityActive("ghoul_ug_3", true);
	
	AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_5", 0.001f, "Idle");
	AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_6", 0.001f, "Idle");
	AddEnemyPatrolNode("ghoul_ug_3", "PathNodeArea_5", 0.001f, "Idle");
	AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_7", 0.001f, "Idle");
	AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_8", 0.001f, "Idle");
	AddEnemyPatrolNode("ghoul_ug_2", "PathNodeArea_7", 0.001f, "Idle");	
}

void sewerdeath_function(string &in asName, int alCount)
{
	if(alCount < 15){
		PlayMusic("ug_ambience.ogg", true, 0.5, 5, 1, false);
		SetEntityActive("ghoul_ug_1", true);
	}			
}
	
void ritualdoor_interact(string &in asEntity)
{
	SetMessage("Messages", "ritualdoor", 6);
	AddQuest("ritualdoor_quest", "ritualdoor_quest");
}	

void machine_quest(string &in asEntity)
{
	AddQuest("machinery", "machinery");
}

/////////////////////////////////////////// does nothing

void play_sound_1(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("", "13_whomp.snt", "sound_area_1", 0.5f, false);
}

////////////////////////////////////////////// does nothing

//////////////////////////////////////////////////////////////////////////////////////////////    does nothing now, but only misses the machine_area
//////////////////////////////////////////////////////////////////////////////////////////////
void machine_examine(string &in asParent, string &in asChild, int alState)
{	
	SetPlayerActive(false);
	StartPlayerLookAt("lookarea_1", 1.0f, 1.0f, "");
	AddTimer("", 2.0f, "second_look");
}

void second_look(string &in asTimer)
{
	StopPlayerLookAt();
	StartPlayerLookAt("lookarea_2", 2.0f, 2.0f, "");
	AddTimer("", 3.0f, "third_look");
}

void third_look(string &in asTimer)
{
	StopPlayerLookAt();
	SetPlayerActive(true);
	AddQuest("machinery", "machinery");
}

//////////////////////////////////////////////////////////////////////////////////////////////    does nothing now, but only misses the machine_area
//////////////////////////////////////////////////////////////////////////////////////////////

void cellsdoor_locked(string &in asEntity)
{
   if(GetSwingDoorLocked("cellsdoor")==true) SetMessage("Messages", "locked", 6); 
}

void unlockmorgue(string &in asItem, string &in asEntity)
{
	SetLevelDoorLocked("morguedoor", false);

	RemoveItem(asItem);

	PlaySoundAtEntity("", "lock_door.snt", "morguedoor", 0.5f, false);
}

void breakbeams(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	FadeOut(1);
	AddTimer("", 1.5f, "breaking");
}

void breaking (string &in asTimer)
{
	SetEntityActive("brokenbeam*", true);
	SetEntityActive("barricadearea", false);
	SetEntityActive("removed_beam_*", false);
	CompleteQuest("barricadewall", "barricadewall");
	FadeIn(1);
} 

void unlockcellsdoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked("cellsdoor", false, false);
	
	PlaySoundAtEntity("", "lock_door.snt", "cellsdoor", 0.5f, false);
	
	RemoveItem(asItem);
}	

void fuelvalve(string &in asEntity)
{
	if (GetLocalVarInt ("glassjar_fuelarea") == 0) SetMessage("Messages", "UG_nojar", 6);

	else if (GetLocalVarInt ("glassjar_fuelarea") == 1){
		SetEntityActive("decoyjar", true);
		SetEntityInteractionDisabled("decoyjar", true);
		CreateParticleSystemAtEntity("fuel_stream", "ps_liquid_epoxy", "fuelstreamarea", true);	
		StartPlayerLookAt("fuel", 5.0f, 5.0f, "");
		SetPlayerActive(false);
		AddTimer("", 4.0f, "getfuel");
		AddTimer("", 4.0f, "stopsound");
		SetEntityActive("usejar_area", false);
		PlaySoundAtEntity("stupidshit", "12_epoxy_drip.snt", "soundarea", 1.0f, true);	
		SetEntityActive("ScriptArea_2", false);
		SetEntityActive("fuelstreamarea", false);
	}
} 

//GET THE FUEL

void usejaronfuel(string &in asItem, string &in asEntity)
{
	SetEntityActive("decoyjar", true);
	
	AddLocalVarInt("glassjar_fuelarea", 1);
	
	SetEntityInteractionDisabled("decoyjar", true);
	
	RemoveItem(asItem);
}

void getfuel(string &in asTimer)
{
	StopPlayerLookAt();
	SetPlayerActive(true);
	SetEntityInteractionDisabled("fuel", false);
	DestroyParticleSystem("fuel_stream");
	SetEntityActive("fuel", true);
	SetEntityActive("decoyjar", false);
}

void stopsound(string &in asTimer)
{
	StopSound("stupidshit", 1.0f);
}

///////////////////////////////////////////////
///////////////////////MACHINERY PUZZLE SCRIPTS

//RODS TO THE SLOTS

void insert_2cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "2cm_area", 0.0f, true);	
	
	SetEntityActive("fake_2cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_rightside", 1);
	
	UnlockRightLever();
}

void insert_10cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "10cm_area", 0.0f, true);	
	
	SetEntityActive("fake_10cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_rightside", 1);
	
	UnlockRightLever();
}

void insert_11cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "11cm_area", 0.0f, true);	
	
	SetEntityActive("fake_11cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_rightside", 1);
	
	UnlockRightLever();
}

void insert_44cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "44cm_area", 0.0f, true);	
	
	SetEntityActive("fake_44cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_leftside", 1);
	
	UnlockLeftLever();
}


void insert_5cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "5cm_area", 0.0f, true);	
	
	SetEntityActive("fake_5cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_leftside", 1);
	
	UnlockLeftLever();
}

void insert_8cm(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "13_rod_in.snt", "8cm_area", 0.0f, true);	
	
	SetEntityActive("fake_8cm_rod_static", true);
	
	RemoveItem(asItem);	
	
	AddLocalVarInt("machine_leftside", 1);
	
	UnlockLeftLever();
}

//UNLOCKING THE LEVERS

void UnlockLeftLever()
{
	if(GetLocalVarInt("machine_leftside") == 3) SetLeverStuckState("leftside_lever", 0, false);
}

void UnlockRightLever()
{
	if(GetLocalVarInt("machine_rightside") == 3) SetLeverStuckState("rightside_lever", 0, false);
}

//A POOR ATTEMPT FOR THE EIGHT LEVERS. LET'S GO //THANK YOU DRONESPENCER

void lever_func(string &in asEntity, int LeverState)
{
	if(GetLeverState("control_room_piston_lever_8") == 1
    && GetLeverState("control_room_piston_lever_7") == -1
    && GetLeverState("control_room_piston_lever_6") == -1
    && GetLeverState("control_room_piston_lever_5") == -1
    && GetLeverState("control_room_piston_lever_4") == -1
    && GetLeverState("control_room_piston_lever_3") == 1
    && GetLeverState("control_room_piston_lever_2") == -1
    && GetLeverState("control_room_piston_lever_1") == -1)
	{
		SetLeverStuckState("control_room_piston_lever_8", 1, true);
		SetLeverStuckState("control_room_piston_lever_7", -1, true);
		SetLeverStuckState("control_room_piston_lever_6", -1, true);
		SetLeverStuckState("control_room_piston_lever_5", -1, true);
		SetLeverStuckState("control_room_piston_lever_4", -1, true);
		SetLeverStuckState("control_room_piston_lever_3", 1, true);
		SetLeverStuckState("control_room_piston_lever_2", -1, true);
		SetLeverStuckState("control_room_piston_lever_1", -1, true);
	
		AddPlayerSanity(50);  
		SetEntityActive("safety_normal_vert_1", false);
		
		AddTimer("", 3.5f, "hellbreaksloose");
	}
}

//ROD LEVER SCRIPTS

void rightlever_func(string &in asEntity, int alState)
{
    if(alState == -1){
		SetLeverStuckState("rightside_lever", -1, true);
		AddLocalVarInt("lever_variable", 1);
		UnlockLevers();
	}
} 

void leftlever_func(string &in asEntity, int alState)
{
    if(alState == -1){
		SetLeverStuckState("leftside_lever", -1, true);
		AddLocalVarInt("lever_variable", 1);
		UnlockLevers();
	}
}

void UnlockLevers()
{
    if(GetLocalVarInt("lever_variable") == 2){
		for(int x = 1; x<9; x++) SetLeverStuckState("control_room_piston_lever_"+x, 0, true); 
	}	
}

void leftleverinteract(string &in asEntity)
{
	if(GetLeverState("leftside_lever") == 1) SetMessage("Messages", "UG_leverstuck", 6);
}	

void rightleverinteract(string &in asEntity)
{
	if(GetLeverState("rightside_lever") == 1) SetMessage("Messages", "UG_leverstuck", 6);
}	

void FlashEvent(string &in asParent, string &in asChild, int alState) //this does nothing at the moment
{
	StartEffectEmotionFlash("Flash", "Monster", "ui_insanity_touch.snt");
}

void BrokenWall(string &in asEntity) //interact with the barricade
{
	SetMessage("Messages", "BrokenWallMessage", 6);
	
	AddQuest("barricadewall", "barricadewall");
}

void KeyCallback(string &in asEntity) //pick up the key from the wall
{
	SetLightVisible("PointLight_24", false);

	SetEntityActive("KeyDropArea", true);
}

/////////////////////////////////////

void DropKeyEvent(string &in asParent, string &in asChild, int alState) //pass by the narrow area with pipes
{
	PlaySoundAtEntity("","25_drop_key", "PipeArea", 0,false);
	
	AddTimer("", 0.5f, "Realize");
	
	SetPlayerActive(false);
	
	RemoveItem("cellskey");
}

void Realize(string &in asTimer)
{
	StartPlayerLookAt("PipeArea", 5.0f, 17.0f, "");

	AddTimer("", 1.5f, "keydroptimer_01");
}

void keydroptimer_01(string &in asTimer)
{	
	SetMessage("Messages", "UG_droppedkey_01", 4);
	
	AddTimer("", 4.5f, "keydroptimer_02");
}

void keydroptimer_02(string &in asTimer)  //end
{
	SetMessage("Messages", "UG_droppedkey_02", 6);
	
	SetPlayerActive(true);
	
	StopPlayerLookAt();
	
	AddQuest("sewerkeyquest", "sewerkeyquest");	
}

/////////////////////////////////////////////////////

void note_pickup_memento(string &in asEntity) //picking up the note explaining the section
{
	AddQuest("note_pickup_memento", "note_pickup_memento");
}

void archives_doorinteract(string &in asEntity)
{
	SetMessage("Messages", "UG_nocomingback", 6);
}

void OnEnter()
{
	PlayMusic("ug_ambience.ogg", true, 0.5, 5, 5, false);
}

void OnLeave()
{   
	for (int x = 0; x <= 100; x++) StopMusic(1.0F, x);
}